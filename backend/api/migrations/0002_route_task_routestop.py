# Generated by Django 5.2 on 2025-04-14 18:07

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_date', models.DateField(db_index=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_end_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('total_distance_km', models.FloatField(blank=True, null=True)),
                ('total_duration_mins', models.PositiveIntegerField(blank=True, help_text='Estimated travel + service time', null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Assignment'), ('ASSIGNED', 'Assigned to Vehicle/Driver'), ('IN_TRANSIT', 'In Transit'), ('COMPLETED', 'Completed'), ('DELAYED', 'Delayed'), ('CANCELLED', 'Cancelled')], db_index=True, default='PENDING', max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='routes', to='api.vehicle')),
            ],
            options={
                'ordering': ['planned_date', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, help_text='Optional description of the task/items', max_length=255)),
                ('weight_kg', models.FloatField(default=0, help_text='Weight of the items in kilograms')),
                ('volume_m3', models.FloatField(default=0, help_text='Volume of the items in cubic meters')),
                ('type', models.CharField(choices=[('DELIVERY', 'Delivery'), ('PICKUP', 'Pickup')], default='DELIVERY', max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ASSIGNED', 'Assigned to Route'), ('COMPLETED', 'Completed')], default='PENDING', max_length=10)),
                ('required_date', models.DateField(help_text='Date the task needs to be completed by')),
                ('window_start', models.TimeField(blank=True, help_text='Earliest time for service at destination', null=True)),
                ('window_end', models.TimeField(blank=True, help_text='Latest time for service at destination', null=True)),
                ('destination', models.ForeignKey(help_text='Location where items are delivered', on_delete=django.db.models.deletion.PROTECT, related_name='tasks_destined', to='api.location')),
                ('origin', models.ForeignKey(help_text='Location where items are picked up', on_delete=django.db.models.deletion.PROTECT, related_name='tasks_originating', to='api.location')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='api.route')),
            ],
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_order', models.PositiveIntegerField(help_text='Order of the stop in the route sequence (0 for depot)')),
                ('stop_type', models.CharField(choices=[('START_DEPOT', 'Start Depot'), ('PICKUP', 'Pickup'), ('DELIVERY', 'Delivery'), ('END_DEPOT', 'End Depot')], default='DELIVERY', max_length=15)),
                ('estimated_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_departure_time', models.DateTimeField(blank=True, null=True)),
                ('actual_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('actual_departure_time', models.DateTimeField(blank=True, null=True)),
                ('load_weight_change_kg', models.FloatField(default=0, help_text='Positive for pickup, negative for delivery')),
                ('load_volume_change_m3', models.FloatField(default=0, help_text='Positive for pickup, negative for delivery')),
                ('cumulative_weight_kg', models.FloatField(blank=True, null=True)),
                ('cumulative_volume_m3', models.FloatField(blank=True, null=True)),
                ('distance_from_previous_km', models.FloatField(blank=True, null=True)),
                ('duration_from_previous_mins', models.PositiveIntegerField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='route_stops', to='api.location')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='api.route')),
            ],
            options={
                'ordering': ['route', 'sequence_order'],
                'unique_together': {('route', 'sequence_order')},
            },
        ),
    ]

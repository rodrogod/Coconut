"""
Django settings for vrp_core project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv # Add dotenv import

load_dotenv() # Load environment variables from .env file (needs to be near the top)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-bp*e8w(4h9khi)x&3n)iws75s&@4b$#ai#lw9d=d27uqkn-kr9'

# Google Maps API Key - Load from environment variable
GOOGLE_MAPS_API_KEY = os.environ.get('GOOGLE_MAPS_API_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Trust the frontend development server origin for CSRF
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken', # Required for token auth
    'api.apps.ApiConfig',       # Our app
    'dj_rest_auth',             # dj-rest-auth core
    'django.contrib.sites',     # Required by dj-rest-auth/allauth
    # 'allauth',                # Required if using allauth features (registration, social)
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'dj_rest_auth.registration', # Required for registration endpoints
    'corsheaders',              # Added for CORS handling
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # Add CORS middleware near the top
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vrp_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vrp_core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Required for django.contrib.sites
SITE_ID = 1

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ( # Use tuple format
        'rest_framework.authentication.TokenAuthentication', # Only Token Auth for API
    ),
    # Removed stray bracket here
    'DEFAULT_PERMISSION_CLASSES': [
        # By default, require authentication for API access
        'rest_framework.permissions.IsAuthenticated',
    ]
    # Add pagination, filtering defaults here if desired later
}

# dj-rest-auth specific settings (optional, defaults are often fine)
# REST_AUTH = {
#     'USE_JWT': False, # We are using Token Authentication
# }

# CORS Configuration
# CORS_ALLOW_ALL_ORIGINS = True # Reverted DEBUG setting
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000", # Allow React dev server
    "http://127.0.0.1:3000", # Also allow this variant
    # Add your production frontend domain here later
]
CORS_ALLOW_CREDENTIALS = True # Allow cookies to be sent/received
